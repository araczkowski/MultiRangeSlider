{
  "name": "wiredep",
  "main": "./wiredep.js",
  "version": "1.4.4",
  "description": "Wire Bower dependencies to your source code.",
  "repository": {
    "type": "git",
    "url": "git://github.com/taptapship/wiredep"
  },
  "author": {
    "name": "Stephen Sawchuk",
    "email": "sawchuk@gmail.com"
  },
  "keywords": [
    "bower",
    "package",
    "management",
    "inject",
    "script",
    "dependencies"
  ],
  "files": [
    "lib/",
    "LICENSE",
    "wiredep.js"
  ],
  "licenses": [
    {
      "type": "MIT"
    }
  ],
  "scripts": {
    "test": "grunt"
  },
  "devDependencies": {
    "grunt": "~0.4.2",
    "grunt-cli": "~0.1.7",
    "grunt-contrib-jshint": "~0.6.0",
    "grunt-contrib-nodeunit": "~0.2.0",
    "grunt-contrib-watch": "~0.5.0",
    "grunt-contrib-copy": "~0.4.1",
    "grunt-contrib-clean": "~0.5.0"
  },
  "dependencies": {
    "lodash": "~1.3.0",
    "chalk": "~0.1.1",
    "glob": "~3.2.8",
    "through2": "~0.4.1"
  },
  "readme": "# wiredep\n> Wire dependencies to your source code.\n\n\n## Getting Started\nInstall the module with: `npm install --save wiredep`\n\n\n## Build Chain Integration\n\n### [gulp.js](http://gulpjs.com/)\n\nwiredep works with [streams](https://github.com/substack/stream-handbook) and integrates with gulp.js out of the box:\n\n```js\nvar wiredep = require('wiredep').stream;\n\ngulp.task('bower', function () {\n  gulp.src('./src/footer.html')\n    .pipe(wiredep({\n      optional: 'configuration',\n      goes: 'here'\n    }))\n    .pipe(gulp.dest('./dest'));\n});\n```\n\n### [Grunt](http://gruntjs.com)\n\nSee [`grunt-bower-install`](https://github.com/stephenplusplus/grunt-bower-install).\n\n\n## Programmatic Access\nYou can run `wiredep` without manipulating any files.\n\n```js\nrequire('wiredep')();\n```\n\n...returns...\n```js\n{\n  js: [\n    'paths/to/your/js/files.js',\n    'in/their/order/of/dependency.js'\n  ],\n  css: [\n    'paths/to/your/css/files.css'\n  ],\n  // etc.\n}\n```\n\n\n## Configuration\n\n```js\nrequire('wiredep')({\n  directory: 'the directory of your Bower packages.', // default: 'bower_components'\n  bowerJson: 'your bower.json file contents.',        // default: require('./bower.json')\n  src: ['filepaths', 'and/even/globs/*.html' 'to take', 'control of.'],\n\n  // ----- Advanced Configuration -----\n  // All of the below settings are for advanced configuration, to\n  // give your project support for additional file types and more\n  // control.\n  //\n  // Out of the box, wiredep will handle HTML files just fine for\n  // JavaScript and CSS injection.\n\n  dependencies: true,    // default: true\n  devDependencies: true, // default: false\n\n  exclude: [ /jquery/, 'bower_components/modernizr/modernizr.js' ],\n\n  ignorePath: /string or regexp to ignore from the injected filepath/,\n  \n  overrides: {\n    // see `Bower Overrides` section below.\n    //\n    // This inline object offers another way to define your overrides if\n    // modifying your project's `bower.json` isn't an option.\n  },\n\n  fileTypes: {\n    fileExtension: {\n      block: /match the beginning-to-end of a bower block in this type of file/,\n      detect: {\n        typeOfBowerFile: /match the way this type of file is included/\n      },\n      replace: {\n        typeOfBowerFile: '<format for this {{filePath}} to be injected>'\n      }\n    },\n\n    // defaults:\n    html: {\n      block: /(([ \\t]*)<!--\\s*bower:*(\\S*)\\s*-->)(\\n|\\r|.)*?(<!--\\s*endbower\\s*-->)/gi\n      detect: {\n        js: /<script.*src=['\"](.+)['\"]>/gi,\n        css: /<link.*href=['\"](.+)['\"]/gi\n      },\n      replace: {\n        js: '<script src=\"{{filePath}}\"></script>',\n        css: '<link rel=\"stylesheet\" href=\"{{filePath}}\" />'\n      }\n    },\n\n    jade: {\n      block: /(([ \\t]*)\\/\\/\\s*bower:*(\\S*))(\\n|\\r|.)*?(\\/\\/\\s*endbower)/gi,\n      detect: {\n        js: /script\\(.*src=['\"](.+)['\"]>/gi,\n        css: /link\\(href=['\"](.+)['\"]/gi\n      },\n      replace: {\n        js: 'script(src=\\'{{filePath}}\\')',\n        css: 'link(rel=\\'stylesheet\\', href=\\'{{filePath}}\\')'\n      }\n    },\n\n    sass: {\n      block: /(([ \\t]*)\\/\\/\\s*bower:*(\\S*))(\\n|\\r|.)*?(\\/\\/\\s*endbower)/gi,\n      detect: {\n        css: /@import\\s['\"](.+)['\"]/gi,\n        sass: /@import\\s['\"](.+)['\"]/gi,\n        scss: /@import\\s['\"](.+)['\"]/gi\n      },\n      replace: {\n        css: '@import {{filePath}}',\n        sass: '@import {{filePath}}',\n        scss: '@import {{filePath}}'\n      }\n    },\n\n    scss: {\n      block: /(([ \\t]*)\\/\\/\\s*bower:*(\\S*))(\\n|\\r|.)*?(\\/\\/\\s*endbower)/gi,\n      detect: {\n        css: /@import\\s['\"](.+)['\"]/gi,\n        sass: /@import\\s['\"](.+)['\"]/gi,\n        scss: /@import\\s['\"](.+)['\"]/gi\n      },\n      replace: {\n        css: '@import \"{{filePath}}\";',\n        sass: '@import \"{{filePath}}\";',\n        scss: '@import \"{{filePath}}\";'\n      }\n    },\n\n    yml: {\n      block: /(([ \\t]*)#\\s*bower:*(\\S*)\\s*)(\\n|\\r|.)*?(#\\s*endbower\\s*)/gi,\n      detect: {\n        js: /-\\s(.+)/gi,\n        css: /-\\s(.+)/gi\n      },\n      replace: {\n        js: '- {{filePath}}'\n        css: '- {{filePath}}'\n      }\n    }\n  }\n});\n```\n\n\n## Bower Overrides\nTo override a property, or lack of, in one of your dependency's `bower.json` file, you may specify an `overrides` object in your own `bower.json`.\n\nAs an example, this is what your `bower.json` may look like if you wanted to override `package-without-main`'s `main` file:\n\n```js\n{\n  ...\n  \"dependencies\": {\n    \"package-without-main\": \"1.0.0\"\n  },\n  \"overrides\": {\n    \"package-without-main\": {\n      \"main\": \"dist/package-without-main.js\"\n    }\n  }\n}\n```\n\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using `npm test`.\n\n\n## License\nCopyright (c) 2014 Stephen Sawchuk. Licensed under the MIT license.\n",
  "readmeFilename": "readme.md",
  "bugs": {
    "url": "https://github.com/taptapship/wiredep/issues"
  },
  "_id": "wiredep@1.4.4",
  "_from": "wiredep@~1.4.0"
}
